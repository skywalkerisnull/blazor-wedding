@page "/parties"
@using Wedding.Services
@inject IPartyService partyService
@inject IDialogService dialogService
<AuthorizeView>
    <Authorized>
        <MudTable Items="@parties" Hover="true" Dense="true">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Parties</MudText>
                <MudSpacer/>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@AddParty">Add Party</MudButton>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Address</MudTh>
                <MudTh>Comments</MudTh>
                <MudTh>Invited</MudTh>
                <MudTh>Sent</MudTh>
                <MudTh>Actions</MudTh>
                <MudTh>Invite Id</MudTh>
            </HeaderContent>
            <RowTemplate Context="party">
                <MudTd DataLabel="Name">@party.PartyName</MudTd>
                <MudTd DataLabel="Address">@party.Address</MudTd>
                <MudTd DataLabel="Comments">@party.Comments</MudTd>
                <MudTd DataLabel="Invited">
                    <MudSwitch Checked="@party.IsInvited" Disabled="true"/>
                </MudTd>
                <MudTd DataLabel="Sent">
                    <MudSwitch Checked="@party.InvitationSent" Disabled="true"/>
                </MudTd>
                <MudTd DataLabel="Actions">
                    <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Small" OnClick="@(() => EditParty(party))">Edit</MudButton>
                    <MudButton Variant="Variant.Outlined" Color="Color.Error" Size="Size.Small" OnClick="@(() => DeleteParty(party))">Delete</MudButton>
                    <NavLink href="@($"/guests/{party.PartyId}")">
                        <MudButton Variant="Variant.Outlined" Color="Color.Default" Size="Size.Small">Guests</MudButton>
                    </NavLink>
                </MudTd>
                <MudTd DataLabel="Invite Id">@party.UniqueInviteId</MudTd>
            </RowTemplate>
        </MudTable>
    </Authorized>
</AuthorizeView>

@code {
    private List<Party> parties;
    private bool Busy = false;

    protected override async Task OnInitializedAsync()
    {
        Busy = true;

        try
        {
            parties = await partyService.GetAllAsync();
        }
        finally
        {
            Busy = false;
        }
        await base.OnInitializedAsync();
    }

    private async Task AddParty()
    {
        var dialog = dialogService.Show<PartyForm>("Add Party");
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            var party = (Party)result.Data;
            await partyService.AddAsync(party);
            parties.Add(party);
            StateHasChanged();
        }
    }

    private async Task EditParty(Party party)
    {
        var dialog = dialogService.Show<PartyForm>("Edit Party", new DialogParameters { ["Party"] = party });
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            var updatedParty = (Party)result.Data;
            await partyService.UpdateAsync(updatedParty);
            var index = parties.IndexOf(party);
            parties[index] = updatedParty;
            StateHasChanged();
        }
    }

    private async Task DeleteParty(Party party)
    {
        bool? result = await dialogService.ShowMessageBox(
            "Confirm Delete",
            $"Are you sure you want to delete {party.PartyName}?",
            yesText: "Delete", cancelText: "Cancel");
        if (result == true)
        {
            await partyService.DeleteAsync(party);
            parties.Remove(party);
            StateHasChanged();
        }
    }

}

@*@page "/parties"
@using MudBlazor
@using Wedding.Data.Entities
@using Wedding.Services;
@inject IGuestService GuestService
@inject IPartyService PartyService
@inject IDialogService DialogService


<MudButton Color="Color.Primary" @onclick="AddParty">
    Add Party
    </MudButton>

<MudTable Items="@parties" Dense="true">
    <HeaderContent>
        <MudTh>Party Name</MudTh>
        <MudTh>Address</MudTh>
        <MudTh>Comments</MudTh>
        <MudTh>Is Invited</MudTh>
        <MudTh>Invitation Opened</MudTh>
        <MudTh>Invitation Sent</MudTh>
        <MudTh>Unique Invite Id</MudTh>
        <MudTh>Invite Sent Date</MudTh>
    </HeaderContent>
    <RowTemplate Context="party">
        <MudTd DataLabel="Party Name">@party.PartyName</MudTd>
        <MudTd DataLabel="Address">@party.Address</MudTd>
        <MudTd DataLabel="Comments">@party.Comments</MudTd>
        <MudTd DataLabel="Is Invited">@party.IsInvited</MudTd>
        <MudTd DataLabel="Invitation Opened">@party.InvitationOpened</MudTd>
        <MudTd DataLabel="Invitation Sent">@party.InvitationSent</MudTd>
        <MudTd DataLabel="Unique Invite Id">@party.UniqueInviteId</MudTd>
        <MudTd DataLabel="Invite Sent Date">@party.InviteSentDate.ToShortDateString()</MudTd>
    </RowTemplate>
</MudTable>


<MudButton Color="Color.Primary" OnClick="AddGuest">Add Guest</MudButton>

<MudTable Items="@guests" Dense="true">
    <HeaderContent>
        <MudTh>First Name</MudTh>
        <MudTh>Last Name</MudTh>
        <MudTh>Is Attending</MudTh>
        <MudTh>Is Attending Rehersal Dinner</MudTh>
        <MudTh>Invite Accepted</MudTh>
        <MudTh>Invitation Opened</MudTh>
        <MudTh>Age Bracket</MudTh>
        <MudTh>Dietary Requirements</MudTh>
    </HeaderContent>
    <RowTemplate Context="guest">
        <MudTd DataLabel="First Name">@guest.FirstName</MudTd>
        <MudTd DataLabel="Last Name">@guest.LastName</MudTd>
        <MudTd DataLabel="Is Attending">@guest.IsAttending</MudTd>
        <MudTd DataLabel="Is Attending Rehersal Dinner">@guest.IsAttendingRehersalDinner</MudTd>
        <MudTd DataLabel="Invite Accepted">@guest.InviteAccepted.ToShortDateString()</MudTd>
        <MudTd DataLabel="Invitation Opened">@guest.InvitationOpened.ToShortDateString()</MudTd>
        <MudTd DataLabel="Age Bracket">@guest.AgeBracket.ToString()</MudTd>
        <MudTd DataLabel="Dietary Requirements">@guest.DietaryRequirements?.ToString()</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private List<Party> parties;
    private List<Guest> guests;

    protected override async Task OnInitializedAsync()
    {
        parties = await PartyService.GetPartiesAsync();
        guests = await GuestService.GetGuestsAsync();
    }

    private async Task AddParty()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = DialogService.Show<AddPartyDialog>("Add Party", options);
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            var party = (Party)result.Data;
            await PartyService.AddPartyAsync(party);
            parties.Add(party);
            StateHasChanged();
        }
    }

    private async Task AddGuest()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = DialogService.Show<AddGuestDialog>("Add Guest", options);
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            var guest = (Guest)result.Data;
            await GuestService.AddGuestAsync(guest);
            guests.Add(guest);
            StateHasChanged();
        }
    }
}*@