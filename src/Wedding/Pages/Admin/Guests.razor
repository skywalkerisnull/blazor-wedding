@*@page "/guests"
@using Wedding.Services

@inject IGuestService GuestService
@inject ISnackbar Snackbar

<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Class="p-4">
            <MudText Typo="Typo.h5">Create Guest</MudText>
            <EditForm Model="@guest" OnValidSubmit="@CreateGuest">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <MudTextField @bind-Value="@guest.FirstName" Label="First Name" Required="true" />
                <MudTextField @bind-Value="@guest.LastName" Label="Last Name" Required="true" />
                <MudSwitch @bind-Checked="@guest.IsAttending" Label="Is Attending?" />
                <MudSwitch @bind-Checked="@guest.IsAttendingRehersalDinner" Label="Is Attending Rehersal Dinner?" />
                <MudDatePicker @bind-Date="@guest.InviteAccepted" Label="Invite Accepted Date" />
                <MudDatePicker @bind-Date="@guest.InvitationOpened" Label="Invitation Opened Date" />
                <MudSelect @bind-Value="@guest.AgeBracket" Label="Age Bracket">
                    @foreach (var ageBracket in Enum.GetValues<AgeBracket>())
                    {
                        <MudSelectItem Value="@ageBracket">@ageBracket</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect T="List<CommonDietaryRequirements>" @bind-Value="@guest.CommonRequirements" Label="Common Dietary Requirements" MultiSelection="true">
                    @foreach (var requirement in Enum.GetValues<CommonDietaryRequirements>())
                    {
                        <MudSelectItem Value="@new List<CommonDietaryRequirements> { requirement }">@requirement</MudSelectItem>
                    }
                </MudSelect>
                <MudTextField @bind-Value="@guest.Allergies" Label="Allergies" />
                <MudTextField @bind-Value="@guest.Other" Label="Other" />
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Create</MudButton>
            </EditForm>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="8">
        <MudPaper Class="p-4">
            <MudText Typo="Typo.h5">Guest List</MudText>
            <MudTable Items="@guests">
                <HeaderContent>
                    <MudTh>First Name</MudTh>
                    <MudTh>Last Name</MudTh>
                    <MudTh>Is Attending?</MudTh>
                    <MudTh>Is Attending Rehersal Dinner?</MudTh>
                    <MudTh>Invite Accepted Date</MudTh>
                    <MudTh>Invitation Opened Date</MudTh>
                    <MudTh>Age Bracket</MudTh>
                    <MudTh>Common Dietary Requirements</MudTh>
                    <MudTh>Allergies</MudTh>
                    <MudTh>Other</MudTh>
                    <MudTh></MudTh>
                </HeaderContent>
                <RowTemplate Context="guest">
                    <CellContent><span>@guest.FirstName</span></CellContent>
                    <CellContent><span>@guest.LastName</span></CellContent>
                    <CellContent><span>@(guest.IsAttending ?? false ? "Yes" : "No")</span></CellContent>
                    <CellContent><span>@(guest.IsAttendingRehersalDinner ?? false ? "Yes" : "No")</span></CellContent>
                    <CellContent><span>@(guest.InviteAccepted?.ToString("d") ?? "-")</span></CellContent>
                    <CellContent><span>@(guest.InvitationOpened?.ToString("d") ?? "-")</span></CellContent>
                    <CellContent><span>@guest.AgeBracket</span></CellContent>
                    <CellContent><span>@string.Join(", ", guest.CommonRequirements)</span></CellContent>
                    <CellContent><span>@(string.IsNullOrWhiteSpace(guest.Allergies) ? "-" : guest.Allergies)</span></CellContent>
                    <CellContent><span>@(string.IsNullOrWhiteSpace(guest.Other) ? "-" : guest.Other)</span></CellContent>
                    <CellContent>
                        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="@(() => EditGuest(guest))">Edit</MudButton>
                        <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="@(() => DeleteGuest(guest))">Delete</MudButton>
                    </CellContent>
                </RowTemplate>
            </MudTable>
        </MudPaper>
    </MudItem>
</MudGrid>

@code { 
    private List<Guest> guests = new List<Guest>();
    private Guest guest = new Guest();
    private TableState tableState = new TableState();
    private int totalItems;
    private bool showDialog;
    private bool isSaving;
    private Guest currentGuest;

    private MudTablePager mudTablePager;

    private async Task<TableData<Guest>> LoadData(TableState state)
    {
        var result = await GuestService.GetPagedResultAsync(state.Page * state.PageSize, state.PageSize, state.SortLabel, state.SortDirection);
        return new TableData<Guest>
        {
            TotalItems = result.TotalCount,
            Items = result.Items
        };
    }

    private void AddGuest()
    {
        currentGuest = new Guest();
        showDialog = true;
    }

    private void EditGuest(Guest guest)
    {
        currentGuest = guest;
        showDialog = true;
    }

    private async Task SaveGuest()
    {
        isSaving = true;
        try
        {
            if (currentGuest.GuestId == Guid.Empty)
            {
                await GuestService.AddAsync(currentGuest);
            }
            else
            {
                await GuestService.UpdateAsync(currentGuest);
            }
            Snackbar.Add("Guest saved successfully.", Severity.Success);
            showDialog = false;
            await LoadData(tableState);
        }
        catch (Exception ex)
        {
            Snackbar.Add("An error occurred while saving guest: " + ex.Message, Severity.Error);
        }
        finally
        {
            isSaving = false;
        }
    }

    private async Task DeleteGuest(Guest guest)
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", $"Are you sure you want to delete {guest.FirstName} {guest.LastName}?");
        parameters.Add("ButtonText", "Delete");
        parameters.Add("Color", Color.Error);

        //var dialog = DialogService.Show<DeleteConfirmation>("Delete Guest", parameters);
        //var result = await dialog.Result;

        //if (!result.Cancelled)
        //{
        //    await GuestService.DeleteAsync(guest.GuestId);
        //    Snackbar.Add("Guest deleted successfully.", Severity.Success);
        //    await LoadData(tableState);
        //}
    }
}*@