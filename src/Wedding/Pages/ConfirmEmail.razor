@page "/confirm-email"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using System.Text

@inject IConfiguration _configuration
@inject UserManager<IdentityUser> _userManager 
@inject NavigationManager _navigationManager
@inject ISnackbar Snackbar

<h3>Confirm your email address</h3>

@if (_confirmed) { 
    <p>Thank you for confirming your email address.</p> 
} 
else if (_error) { 
    <p>Sorry, something went wrong. Please try again later.</p> 
} 
else { 
    <p>Please wait while we confirm your email address…</p> 
}

@code {
    private bool _confirmed = false;
    private bool _error = false;

    protected override async Task OnInitializedAsync()
    {
        if (_configuration.GetValue("AllowAccountRegistration", false))
        {
            var uri = _navigationManager.ToAbsoluteUri(_navigationManager.Uri);
            var queryTokens = System.Web.HttpUtility.ParseQueryString(uri.Query);

            string? Token = null;
            string? UserId = null;

            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("Token", out var token))
            {
                Token = Encoding.UTF8.GetString(Convert.FromBase64String(token.First()));
            }

            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("UserId", out var userid))
            {
                UserId = userid.First();
            }

            if (Token is not null && UserId is not null)
            {
                var user = await _userManager.FindByIdAsync(UserId);
                if (user != null)
                {
                    var result = await _userManager.ConfirmEmailAsync(user, Token);
                    if (result.Succeeded)
                    {
                        _confirmed = true;
                        Snackbar.Add("Email address has been confirmed.", Severity.Success);
                    }
                    else
                    {
                        _error = true;
                        Snackbar.Add("Something went wrong, your email address has not been confirmed.", Severity.Error);
                    }
                }
                else
                {
                    _error = true;
                    Snackbar.Add("Something went wrong, your email address has not been confirmed.", Severity.Error);
                }
            }
            else
            {
                _error = true;
                Snackbar.Add("Something went wrong, your email address has not been confirmed.", Severity.Error);
            }
        }
        else
        {
            _error = true;
            Snackbar.Add("Something went wrong, your email address has not been confirmed.", Severity.Error);
        }
    }
}